package us.mikeandwan.photos.api

import com.fasterxml.jackson.annotation.JsonProperty
import java.util.*

data class ExifData(
    // exif
    @JsonProperty("bitsPerSample") val bitsPerSample: Short?,
    @JsonProperty("compression") val compression: String?,
    @JsonProperty("contrast") val contrast: String?,
    @JsonProperty("createDate") val createDate: Date?,
    @JsonProperty("digitalZoomRatio") val digitalZoomRatio: Double?,
    @JsonProperty("exposureCompensation") val exposureCompensation: String?,
    @JsonProperty("exposureMode") val exposureMode: String?,
    @JsonProperty("exposureProgram") val exposureProgram: String?,
    @JsonProperty("exposureTime") val exposureTime: String?,
    @JsonProperty("fNumber") val fNumber: Double?,
    @JsonProperty("flash") val flash: String?,
    @JsonProperty("focalLength") val focalLength: Double?,
    @JsonProperty("focalLengthIn35mmFormat") val focalLengthIn35mmFormat: Double?,
    @JsonProperty("gainControl") val gainControl: String?,
    @JsonProperty("gpsAltitude") val gpsAltitude: Double?,
    @JsonProperty("gpsAltitudeRef") val gpsAltitudeRef: String?,
    @JsonProperty("gpsDateStamp") val gpsDateStamp: Date?,
    @JsonProperty("gpsDirection") val gpsDirection: Double?,
    @JsonProperty("gpsDirectionRef") val gpsDirectionRef: String?,
    @JsonProperty("gpsLatitude") val gpsLatitude: Double?,
    @JsonProperty("gpsLatitudeRef") val gpsLatitudeRef: String?,
    @JsonProperty("gpsLongitude") val gpsLongitude: Double?,
    @JsonProperty("gpsLongitudeRef") val gpsLongitudeRef: String?,
    @JsonProperty("gpsMeasureMode") val gpsMeasureMode: String?,
    @JsonProperty("gpsSatellites") val gpsSatellites: String?,
    @JsonProperty("gpsStatus") val gpsStatus: String?,
    @JsonProperty("gpsVersionId") val gpsVersionId: String?,
    @JsonProperty("iso") val iso: Int?,
    @JsonProperty("lightSource") val lightSource: String?,
    @JsonProperty("make") val make: String?,
    @JsonProperty("meteringMode") val meteringMode: String?,
    @JsonProperty("model") val model: String?,
    @JsonProperty("orientation") val orientation: String?,
    @JsonProperty("saturation") val saturation: String?,
    @JsonProperty("sceneCaptureType") val sceneCaptureType: String?,
    @JsonProperty("sceneType") val sceneType: String?,
    @JsonProperty("sensingMethod") val sensingMethod: String?,
    @JsonProperty("sharpness") val sharpness: String?,

    // nikon
    @JsonProperty("autoFocusAreaMode") val autoFocusAreaMode: String?,
    @JsonProperty("autoFocusPoint") val autoFocusPoint: String?,
    @JsonProperty("activeDLighting") val activeDLighting: String?,
    @JsonProperty("colorspace") val colorspace: String?,
    @JsonProperty("exposureDifference") val exposureDifference: Double?,
    @JsonProperty("flashColorFilter") val flashColorFilter: String?,
    @JsonProperty("flashCompensation") val flashCompensation: String?,
    @JsonProperty("flashControlMode") val flashControlMode: Short?,
    @JsonProperty("flashExposureCompensation") val flashExposureCompensation: String?,
    @JsonProperty("flashFocalLength") val flashFocalLength: Double?,
    @JsonProperty("flashMode") val flashMode: String?,
    @JsonProperty("flashSetting") val flashSetting: String?,
    @JsonProperty("flashType") val flashType: String?,
    @JsonProperty("focusDistance") val focusDistance: Double?,
    @JsonProperty("focusMode") val focusMode: String?,
    @JsonProperty("focusPosition") val focusPosition: Int?,
    @JsonProperty("highIsoNoiseReduction") val highIsoNoiseReduction: String?,
    @JsonProperty("hueAdjustment") val hueAdjustment: String?,
    @JsonProperty("noiseReduction") val noiseReduction: String?,
    @JsonProperty("pictureControlName") val pictureControlName: String?,
    @JsonProperty("primaryAFPoint") val primaryAFPoint: String?,
    @JsonProperty("vrMode") val vrMode: String?,
    @JsonProperty("vibrationReduction") val vibrationReduction: String?,
    @JsonProperty("vignetteControl") val vignetteControl: String?,
    @JsonProperty("whiteBalance") val whiteBalance: String?,

    // composite
    @JsonProperty("aperture") val aperture: Double?,
    @JsonProperty("autoFocus") val autoFocus: String?,
    @JsonProperty("depthOfField") val depthOfField: String?,
    @JsonProperty("fieldOfView") val fieldOfView: String?,
    @JsonProperty("hyperfocalDistance") val hyperfocalDistance: Double?,
    @JsonProperty("lensId") val lensId: String?,
    @JsonProperty("lightValue") val lightValue: Double?,
    @JsonProperty("scaleFactor35Efl") val scaleFactor35Efl: Double?,
    @JsonProperty("shutterSpeed") val shutterSpeed: String?
)
